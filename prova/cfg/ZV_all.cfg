# ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----#
#                                                                 #
#         CONFIG FILE TO CREATE INPUTS TO mkDataCards             #
#                                                                 #
# ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----#

[general]
sample = ZV
outfolder = ZV_all
folder_prefix = to_Latinos_
outfile = histos.root
lumi = 100

[ntuples]

folder = /eos/user/r/ribrusa/ntuple-OK/ZV_2D

[eft]
# This secction suppose a naming convention as output from the D6EFTStudies lhe routine
# for example a file name is: ntuple_SSWW_cHW_QU.root. 
# "operators" is a list of op names such as cHW while "component" refer to QU for 
# quadratic while LI for the linear term, IN for interference or SM ( superseeds the op field). 
# * retireves every possible file.
# The "model" fields specifies the way in which histograms will be merged (e.g. SM+LI+QU etc)
operators = [cHl1:cHq1:cHq3:cHW:cqq11:cqq1:cqq31:cqq3:cW]
#operators = [cHWB:cHl3],[cHW]
models = EFTNeg-overall
#EFT,EFTNeg,EFTNeg-alt
fitranges = cHl1:-7:7,cHq1:-3:3,cHq3:-0.5:0.5,cHW:-3:3,cqq11:-1:1,cqq1:-1:1,cqq31:-0.5:0.5,cqq3:-0.5:0.5,cW:-1:1

#cuts are under work
[cuts]
#normalcuts = 1==1
normalcuts = mjj_V2<0,mjj_max>500,mll>20,ptl1>20,ptl2>25,ptj1_mjjmax>30,ptj2_mjjmax>30,deltaetajj_mjjmax>2.5,etaj1_mjjmax<5,etaj1_mjjmax>-5,etaj2_mjjmax<5,etaj2_mjjmax>-5,etal1>-2.5,etal1<2.5,etal2>-2.5,etal2<2.5
#normalcuts = met>30,mjj>500,mll>20,ptl1>25,ptl2>20,ptj1>30,ptj2>30,deltaetajj>2.5,etaj1<5,etaj1>-5,etaj2<5,etaj2>-5

[supercuts]
expr = -

[variables]
makeDummy = DATA
histonames = histo_ZV
treenames = mjj, mjj_max, mjj_nomax, ptj1, ptj1_mjjmax, ptj1_mjjnomax, ptj2, ptj2_mjjmax, ptj2_mjjnomax, etaj1, etaj1_mjjmax, etaj1_mjjnomax, etaj2, etaj2_mjjmax, etaj2_mjjnomax, deltaetajj, deltaetajj_mjjmax, deltaetajj_mjjnomax, deltaphijj, deltaphijj_mjjmax, deltaphijj_mjjnomax, mll, ptl1, ptl2, etal1, etal2, ptll
binsize = log, log, fix, log, log, log, log, log, log, fix, fix, fix, fix, fix, fix, fix, fix, fix, fix, fix, fix, fix, log, log, fix, fix, log
bins = 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10
xrange = [500:4000], [500:4000], [70:110], [60:600], [60:600], [60:350], [30:300], [30:400], [30:200], [-5:5], [-5:5], [-5:5], [-5:5], [-5:5], [-5:5], [2.5:7], [2.5:7], [0:3], [0:3.14], [0:3.14], [0:3.14], [85:105], [25:175], [25:450], [-2.5:2.5], [-2.5:2.5], [30:450]
fold = 0

# This part generates some dummy files 
# in order to work with the Latinos framework.
# They should be edited and contain only minimal information.

[d_structure]
makeDummy = True

[d_samples]
name = []
weight = ''
weights = []
filesperjob = 2
makeDummy = True

[d_variables]
xaxis = "m^{jj} [GeV]", "m^{jj}_{max}", "m^{jj}_{nomax} [GeV]", "pt^{j1} [GeV]", "pt^{j1}_{mjj max} [GeV]", "pt^{j1}_{mjj nomax} [GeV]", "pt^{j2} [GeV]", "pt^{j2}_{mjj max} [GeV]", "pt^{j2}_{mjj nomax} [GeV]", "#eta^{j1}", "#eta^{j1}_{mjj max}", "#eta^{j1}_{mjj nomax}", "#eta^{j2}", "#eta^{j2}_{mjj max}", "#eta^{j2}_{mjj nomax}", "#Delta#eta^{jj}", "#Delta#eta^{jj}_{mjj max}", "#Delta#eta^{jj}_{mjj nomax}", "#Delta#phi^{jj}", "#Delta#phi^{jj}_{mjj max}", "#Delta#phi^{jj}_{mjj nomax}", "m^{ll} [GeV]", "pt^{l1} [GeV]", "pt^{l2} [GeV]", "#eta^{l1}", "#eta^{l2}", "pt^{ll}"
name = auto
range = auto
fold = auto

makeDummy = True

[d_plot]
#group plots , name:options
#if "BSM" then group all BSM, else expects a list of samples names
#group = model:BSM,SM:[sm]
#g_colors = 400,851
group = all:all
isSignal = sm:0,DATA:0
#2D colors
colors = sm:921,lin:418:419,quad:617:618,sm_lin_quad:851:852,lin_mixed:100,sm_lin_quad_mixed:800,quad_mixed:752
#1D colors
#colors = sm:921,lin:418,quad:617
makeDummy = True

[d_alias]
makeDummy = True

[d_cuts]
makeDummy = True

[d_configuration]
tag = "ZV_1D_phys"
aliasesFile = auto
variablesFile = auto
cutsFile = auto
samplesFile = auto
plotFile = auto
lumi = 100
outputDirPlots = "plots"
outputDirDatacard = "datacards"
structureFile = auto
nuisancesFile = auto
makeDummy = True

[d_nuisances]
propagate = False
defname = lumi
name = lumi
#convention...
# FOr each nuisance you have to provide a sample list and a value
# they have to be in format [sample1:value1|sample2:value2|...] , [...]
# where the number of list equals the number of nuisances
#samples = [sm:1.02]
samples = [all:1.02]
types = lnN
makeDummy = True

